#!/bin/bash

BINTRAY_CREDENTIAL_FILE=$HOME/.bintray/.credentials
DOCKER_CREDENTIAL_FILE=$HOME/.docker/config.json
GITHUB_CREDENTIAL_FILE=$HOME/.github/credentials

setBintrayCredential() {
  mkdir -p $(dirname $BINTRAY_CREDENTIAL_FILE)
  cat <<- _EOF_ > $BINTRAY_CREDENTIAL_FILE
  	realm = Bintray API Realm
  	host = api.bintray.com
  	user = $BINTRAY_USER
  	password = $BINTRAY_API_KEY
  _EOF_
  echo "Bintray credential set in $BINTRAY_CREDENTIAL_FILE"
  cat $BINTRAY_CREDENTIAL_FILE
}

setDockerCredential() {
  mkdir -p $(dirname $DOCKER_CREDENTIAL_FILE)
  cat <<- _EOF_ > $DOCKER_CREDENTIAL_FILE
  	{
  		"auths": {
  			"https://index.docker.io/v1/": {
  				"auth": "$DOCKER_CREDENTIAL_FILE"
  			}
  		}
  	}

  _EOF_
  echo "Docker credential set in $DOCKER_CREDENTIAL_FILE"
  cat $DOCKER_CREDENTIAL_FILE
}

setGithubCredential() {
  mkdir -p $(dirname $GITHUB_CREDENTIAL_FILE)
  cat <<- _EOF_ > $GITHUB_CREDENTIAL_FILE
  	token=$GITHUB_TOKEN
  _EOF_
  echo "Github credential set in $GITHUB_CREDENTIAL_FILE"
  cat $GITHUB_CREDENTIAL_FILE
}


#GIT_VERSION=$(git describe --tags --exact HEAD &> /dev/null)
PACKAGE_VERSION=$(sbt "show version" 2> /dev/null | tail -1 | sed -e 's/.* //;s/-.*//')
GIT_TAGS=$(git tag --points-at HEAD)
if test -z "$GIT_TAGS"
then
  sbt ++$TRAVIS_SCALA_VERSION test
else
  for GIT_VERSION in $GIT_TAGS
  do
    case $GIT_VERSION in
      $PACKAGE_VERSION)
        echo Publishing release $GIT_VERSION ...
        setBintrayCredential
        setDockerCredential
        setGithubCredential
        sbt ++$TRAVIS_SCALA_VERSION publish
        ;;
      debian/*)
        echo Publishing debian package ...
        setBintrayCredential
        sbt ++$TRAVIS_SCALA_VERSION publishDebian
        ;;
      rpm/*)
        echo Publishing rpm package ...
        setBintrayCredential
        sbt ++$TRAVIS_SCALA_VERSION publishRpm
        ;;
      binary/*)
        echo Publishing binary package ...
        setBintrayCredential
        sbt ++$TRAVIS_SCALA_VERSION publish???
        ;;
      docker/*)
        echo Publishing docker package ...
        setDockerCredential
        sbt ++$TRAVIS_SCALA_VERSION docker:publish
        ;;
      *)
        echo "Unknown tag ($GIT_VERSION), run test."
        sbt ++$TRAVIS_SCALA_VERSION test
    esac
  done
fi
